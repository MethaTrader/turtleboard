/* resources/css/animations.css */

/* Smooth fade in animation */
@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

/* Smooth fade out animation */
@keyframes fadeOut {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}

/* Slide in from top */
@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateY(-10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Slide out to top */
@keyframes slideOut {
    from {
        opacity: 1;
        transform: translateY(0);
    }
    to {
        opacity: 0;
        transform: translateY(-10px);
    }
}

/* Gentle scale animation for modals */
@keyframes modalScale {
    from {
        opacity: 0;
        transform: scale(0.95);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

/* Node selection pulse */
@keyframes nodeSelect {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.1);
    }
    100% {
        transform: scale(1.05);
    }
}

/* Subtle node hover effect */
@keyframes nodeHover {
    0% {
        transform: scale(1);
        filter: brightness(1);
    }
    100% {
        transform: scale(1.03);
        filter: brightness(1.05);
    }
}

/* Edge creation animation */
@keyframes edgeCreate {
    0% {
        opacity: 0;
        stroke-dasharray: 0, 1000;
    }
    100% {
        opacity: 0.8;
        stroke-dasharray: 1000, 0;
    }
}

/* Connection mode pulse for highlighting */
@keyframes highlightPulse {
    0%, 100% {
        box-shadow: 0 0 0 0 rgba(90, 85, 210, 0.7);
    }
    50% {
        box-shadow: 0 0 0 8px rgba(90, 85, 210, 0);
    }
}

/* Connection mode glow */
@keyframes connectionModeGlow {
    0%, 100% {
        border-color: #00DEA3;
        box-shadow: 0 0 5px rgba(0, 222, 163, 0.3);
    }
    50% {
        border-color: #00C090;
        box-shadow: 0 0 10px rgba(0, 222, 163, 0.5);
    }
}

/* Toast slide animations */
@keyframes toastSlideIn {
    from {
        opacity: 0;
        transform: translate(-50%, -20px);
    }
    to {
        opacity: 1;
        transform: translate(-50%, 0);
    }
}

@keyframes toastSlideOut {
    from {
        opacity: 1;
        transform: translate(-50%, 0);
    }
    to {
        opacity: 0;
        transform: translate(-50%, -20px);
    }
}

/* Loading spinner */
@keyframes loadingSpinner {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

/* Loading pulse */
@keyframes loadingPulse {
    0%, 100% {
        opacity: 1;
    }
    50% {
        opacity: 0.6;
    }
}

/* Button hover effect */
@keyframes buttonHover {
    from {
        transform: translateY(0);
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }
    to {
        transform: translateY(-1px);
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
    }
}

/* Control panel slide in */
@keyframes controlPanelSlideIn {
    from {
        opacity: 0;
        transform: translateX(20px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

/* Network container fade in */
.network-container {
    animation: fadeIn 0.5s ease-out;
}

/* Tooltip fade animations */
.vis-tooltip {
    transition: opacity 0.2s ease, visibility 0.2s ease;
}

.vis-tooltip.hiding {
    opacity: 0 !important;
    visibility: hidden !important;
}

/* Node states */
.vis-network .vis-node.connection-mode {
    animation: highlightPulse 2s infinite;
}

.vis-network .vis-node.selected {
    animation: nodeSelect 0.3s ease-out;
}

.vis-network .vis-node:hover {
    animation: nodeHover 0.2s ease-out forwards;
}

/* Edge states */
.vis-network .vis-edge.creating {
    animation: edgeCreate 0.6s ease-out;
}

/* UI Component animations */
.toast {
    animation: toastSlideIn 0.3s ease-out;
}

.toast.hiding {
    animation: toastSlideOut 0.3s ease-out forwards;
}

/* Smooth modal animations */
.modal-backdrop {
    animation: fadeIn 0.3s ease-out;
}

.modal-content {
    animation: modalScale 0.3s ease-out;
}

.control-panel {
    animation: controlPanelSlideIn 0.4s ease-out;
}

.button-hover {
    transition: all 0.2s ease;
}

.button-hover:hover {
    animation: buttonHover 0.2s ease-out forwards;
}

/* Loading states */
.loading-spinner {
    animation: loadingSpinner 1s linear infinite;
}

.loading-pulse {
    animation: loadingPulse 1.5s ease-in-out infinite;
}

/* Best choice suggestion animation */
@keyframes bestChoicePulse {
    0% {
        box-shadow: 0 0 0 0 rgba(0, 222, 163, 0.4);
    }
    70% {
        box-shadow: 0 0 0 10px rgba(0, 222, 163, 0);
    }
    100% {
        box-shadow: 0 0 0 0 rgba(0, 222, 163, 0);
    }
}

.best-choice-badge {
    animation: bestChoicePulse 2s infinite;
}

/* Error animation */
@keyframes errorShake {
    0%, 100% {
        transform: translateX(0);
    }
    25% {
        transform: translateX(-3px);
    }
    75% {
        transform: translateX(3px);
    }
}

.error-animation {
    animation: errorShake 0.4s ease-in-out;
}

/* Success animation */
@keyframes successBounce {
    0%, 20%, 50%, 80%, 100% {
        transform: translateY(0);
    }
    40% {
        transform: translateY(-5px);
    }
    60% {
        transform: translateY(-2px);
    }
}

.success-animation {
    animation: successBounce 0.6s ease-in-out;
}

/* Responsive animations - disable for users who prefer reduced motion */
@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

/* High performance mode for large networks */
.vis-network.performance-mode .vis-node,
.vis-network.performance-mode .vis-edge {
    will-change: auto;
}

.vis-network.performance-mode .vis-node:hover,
.vis-network.performance-mode .vis-edge:hover {
    will-change: transform, opacity;
}

/* Fade in up animation for cards */
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.animate-fadeInUp {
    animation: fadeInUp 0.6s ease-out forwards;
}

/* Delay classes */
.delay-100 { animation-delay: 0.1s; }
.delay-200 { animation-delay: 0.2s; }
.delay-300 { animation-delay: 0.3s; }

/* Network stabilization indicator */
.network-stabilizing {
    position: relative;
}

.network-stabilizing::after {
    content: "Organizing network...";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(255, 255, 255, 0.95);
    padding: 12px 24px;
    border-radius: 25px;
    font-size: 14px;
    color: #5A55D2;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    animation: loadingPulse 1.5s ease-in-out infinite;
    z-index: 1000;
}